#!/bin/bash

CONFIG_I3=$HOME/.i3/config

function print_help()
{
    echo -e "$0 usage: $0 <command> <file>"
    echo -e "command:"
    echo -e "\t --move : move i3 workspace on the good monitor following config file give in parameter. File must contains a"
    echo -e "\t --write : write variable config concerning screen and workspace."
    echo -e "\t --dock : make write step, restart i3 and move step."
    echo -e "file is the path to workspaces output mapping."
    echo -e "\t It will be used to fill i3 config file a to move"
    echo -e "\t workspace on good monitor."
    exit 1
}

function move_workspaces()
{
    while read name; do
        echo $name
        output=$(echo $workspace_mapping|jshon -e "$name")
        echo "output: $output name: $name"
        if [ -z $output ]; then
            echo "$name is not in your config file."
        else
            i3-msg workspace $name
            echo "name: %name"
            i3-msg move workspace to output $output
            echo "output: %output"
        fi
    done< <(i3-msg -t get_workspaces|jshon -a -e name -u)
}

function write_in_config()
{
    #save old config file
    if [ -f $CONFIG_I3 ] ; then
        echo "$CONFIG_I3 is saved to ~/.i3/config.old"
        #cp $i3config $HOME/.i3/config.old
    fi

    #write header
    echo -e "# Do not edit this file." > $CONFIG_I3
    echo -e "# Use ~/configFiles/i3/config.base or" >> $CONFIG_I3
    echo -e "# ~/configFiles/i3/config.laptop or" >> $CONFIG_I3
    echo -e "#Â ~/configFiles/i3/config.fix." >> $CONFIG_I3

    #write config from separates files
    config_files_number=$(echo $config_files|jshon -l)
    if [ $config_files_number -ne 0 ]; then
        for i in $( seq 0 $(( config_files_number-1 )) ); do
            file=$(echo $config_files|jshon -e $i -u)
            if [ -f $file ]; then
                cat $file >> $CONFIG_I3
            else
                echo "$file is not readable"
            fi
        done
    fi
    #cat $repoConfigFiles/config.base >> $i3config
    #cat $1 >> $i3config

    #write variable
    variables_number=$(echo $variables|jshon -l)
    if [ $variables_number -ne 0 ]; then
        for i in $( seq 0 $(( $variables_number-1 )) ); do
            name="$(echo $variables|jshon -e $i -e name -u)"
            value="$(echo $variables|jshon -e $i -e value)"
            echo "set $name $value">>$CONFIG_I3
        done
    fi
    
    #write workspaces
    while read name; do
        output=$(echo $workspace_mapping|jshon -e "$name")
        echo "workspace \"$name\" output $output">>$CONFIG_I3
    done< <(echo $workspace_mapping|jshon -k)

}

if [ $# -ne 2 ]; then
    print_help
fi

if [ $1 == "--move" ]; then
    if [ -f $2 ]; then
        source $2
        if [ $(echo $workspace_mapping|jshon -l) -ne 0 ]; then
            move_workspaces
        else
            echo "$0 $1 must have defined variable workspace_mapping with a json table."
            exit 1
        fi
    else
        print_help
    fi
elif [ $1 == "--write" ]; then
    if [ -f $2 ]; then
        source $2
        write_in_config
    else
        print_help
    fi
elif [ $1 == "--dock" ]; then
    if [ -f $2 ]; then
        source $2
        write_in_config
        sleep 1
        #i3-msg restart
        move_workspaces
    else
        print_help
    fi
else
    print_help
fi
exit 0
